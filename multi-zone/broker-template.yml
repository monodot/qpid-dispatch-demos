apiVersion: v1
kind: Template
parameters:
- name: ZONE_NAME
  displayName: Zone Name
  description: Suffix to add to the objects' names to ensure their uniqueness
  required: true
- name: NODE_SELECTOR_KEY
  displayName: Affinity Node Selector Key
  description: Key to use to find nodes on which to schedule the broker pods (Affinity scheduling)
  required: true
- name: NODE_SELECTOR_VALUE
  displayName: Affinity Node Selector Value
  description: Value to use to find nodes on which to schedule the broker pods (Affinity scheduling)
  required: true
objects:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      application: broker-${ZONE_NAME}
      zone: ${ZONE_NAME}
    name: broker-${ZONE_NAME}-amq
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: broker-${ZONE_NAME}-amq
    serviceName: broker-${ZONE_NAME}-amq-headless
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: broker-${ZONE_NAME}-amq
          application: broker-${ZONE_NAME}
          deploymentConfig: broker-${ZONE_NAME}-amq
          zone: ${ZONE_NAME}
        name: broker-${ZONE_NAME}-amq
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: ${NODE_SELECTOR_KEY}
                  operator: In
                  values:
                  - ${NODE_SELECTOR_VALUE}
        containers:
        - env:
          - name: AMQ_USER
            valueFrom:
              secretKeyRef:
                key: broker.user
                name: broker-credentials
          - name: AMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                key: broker.password
                name: broker-credentials
          - name: AMQ_ROLE
            value: admin
          - name: AMQ_NAME
            value: broker-${ZONE_NAME}
          - name: AMQ_TRANSPORTS
            value: openwire,amqp,stomp,mqtt,hornetq
          - name: AMQ_KEYSTORE_TRUSTSTORE_DIR
            value: /etc/amq-secret-volume
          - name: AMQ_TRUSTSTORE
            value: broker.ts
          - name: AMQ_TRUSTSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: truststore.password
                name: broker-credentials
          - name: AMQ_KEYSTORE
            value: broker.ks
          - name: AMQ_KEYSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: keystore.password
                name: broker-credentials
          - name: AMQ_SSL_PROVIDER
          - name: GLOBAL_MAX_SIZE
            value: 100 gb
          - name: AMQ_REQUIRE_LOGIN
            value: "true"
          - name: AMQ_DATA_DIR
            value: /opt/amq/data
          - name: AMQ_DATA_DIR_LOGGING
            value: "true"
          - name: AMQ_EXTRA_ARGS
          - name: AMQ_ANYCAST_PREFIX
          - name: AMQ_MULTICAST_PREFIX
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: AMQ_ENABLE_METRICS_PLUGIN
            value: "false"
          - name: AMQ_JOURNAL_TYPE
            value: nio
          - name: BROKER_XML
            valueFrom:
              configMapKeyRef:
                key: broker.xml
                name: broker-config
          image: registry.redhat.io/amq7/amq-broker:7.6
          imagePullPolicy: IfNotPresent
          name: broker-${ZONE_NAME}-amq
          ports:
          - containerPort: 8161
            name: console-jolokia
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 5671
            name: amqp-ssl
            protocol: TCP
          - containerPort: 1883
            name: mqtt
            protocol: TCP
          - containerPort: 8883
            name: mqtt-ssl
            protocol: TCP
          - containerPort: 61613
            name: stomp
            protocol: TCP
          - containerPort: 61612
            name: stomp-ssl
            protocol: TCP
          - containerPort: 61616
            name: all
            protocol: TCP
          - containerPort: 61617
            name: all-ssl
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/amq/bin/readinessProbe.sh
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/amq/data
            name: broker-${ZONE_NAME}-amq-pvol
          - mountPath: /etc/amq-secret-volume
            name: broker-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 60
        volumes:
        - name: broker-secret-volume
          secret:
            defaultMode: 420
            secretName: broker-keystores
    updateStrategy:
      type: RollingUpdate
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        name: broker-${ZONE_NAME}-amq-pvol
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status:
        phase: Pending
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's headless, non load balanced service
    labels:
      app: broker-${ZONE_NAME}
      application: broker-${ZONE_NAME}
      zone: ${ZONE_NAME}
    name: broker-${ZONE_NAME}-amq-headless
  spec:
    clusterIP: None
    ports:
    - name: all
      port: 61616
      protocol: TCP
      targetPort: 61616
    - name: console-jolokia
      port: 8161
      protocol: TCP
      targetPort: 8161
    - name: amqp
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: mqtt
      port: 1883
      protocol: TCP
      targetPort: 1883
    - name: stomp
      port: 61613
      protocol: TCP
      targetPort: 61613
    - name: all-ssl
      port: 61617
      protocol: TCP
      targetPort: 61617
    - name: amqp-ssl
      port: 5671
      protocol: TCP
      targetPort: 5671
    - name: mqtt-ssl
      port: 8883
      protocol: TCP
      targetPort: 8883
    - name: stomp-ssl
      port: 61612
      protocol: TCP
      targetPort: 61612
    publishNotReadyAddresses: true
    selector:
      deploymentConfig: broker-${ZONE_NAME}-amq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: broker-${ZONE_NAME}
      application: broker-${ZONE_NAME}
      zone: ${ZONE_NAME}
    name: broker-${ZONE_NAME}-console
  spec:
    port:
      targetPort: console-jolokia
    tls:
      termination: passthrough
    to:
      kind: Service
      name: broker-${ZONE_NAME}-amq-headless
      weight: 100
    wildcardPolicy: None
