apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: inter-router-zone2
  data:
    qdrouterd.conf: |-
      router {
          mode: interior
          id: Router.${HOSTNAME}
      }

      #log {
      #    module: SERVER
      #    enable: trace+
      #    includeTimestamp: yes
      #}

      # only allow anonymous connections over localhost
      listener {
          host: localhost
          port: amqp
          authenticatePeer: no
          saslMechanisms: ANONYMOUS
      }

      listener {
          host: 0.0.0.0
          port: amqps
          sslProfile: service_tls
          authenticatePeer: yes
          requireSsl: true
          saslMechanisms: EXTERNAL
      }

      listener {
          host: 0.0.0.0
          port: 55672
          role: inter-router
          sslProfile: inter_router_tls
          authenticatePeer: yes
          requireSsl: true
          saslMechanisms: EXTERNAL
      }

      sslProfile {
          name: inter_router_tls
          certFile: /etc/qpid-dispatch-certs/inter-router/tls.crt
          privateKeyFile: /etc/qpid-dispatch-certs/inter-router/tls.key
          caCertFile: /etc/qpid-dispatch-certs/inter-router/ca.crt
      }

      sslProfile {
          name: external
          certFile: /etc/qpid-dispatch-certs/external/tls.crt
          privateKeyFile: /etc/qpid-dispatch-certs/external/tls.key
      }

      listener {
          host: 0.0.0.0
          port: 8672
          authenticatePeer: yes
          http: true
          httpRootDir: /usr/share/qpid-dispatch/console
      }

      address {
          prefix: closest
          distribution: closest
      }

      address {
          prefix: multicast
          distribution: multicast
      }

      address {
          prefix: unicast
          distribution: closest
      }

      address {
          prefix: exclusive
          distribution: closest
      }

      address {
          prefix: broadcast
          distribution: multicast
      }

      # The connection to the intra-router is initiated by the intra-router itself

      connector {
          role: inter-router
          host: inter-router-zone1
          port: 55672
          sslProfile: inter_router_tls
          verifyHostname: false
      }

      connector {
          role: inter-router
          host: inter-router-zone3
          port: 55672
          sslProfile: inter_router_tls
          verifyHostname: false
      }
      # TODO: Add any authentication and authorisation rules here
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: inter-router-zone2
    name: inter-router-zone2
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentConfig: inter-router-zone2
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 0
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling

    template:
      metadata:
        creationTimestamp: null
        labels:
          application: inter-router-zone2
          deploymentConfig: inter-router-zone2
        name: inter-router-zone2
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                  - node-1.sharedocp311cns.lab.rdu2.cee.redhat.com
        containers:
        - env:
          - name: APPLICATION_NAME
            value: inter-router-zone2
          - name: QDROUTERD_CONF
            value: /etc/qpid-dispatch/qdrouterd.conf
          - name: QDROUTERD_AUTO_MESH_DISCOVERY
            value: QUERY
          - name: QDROUTERD_AUTO_CREATE_SASLDB_SOURCE
            value: /etc/qpid-dispatch-users
          - name: QDROUTERD_AUTO_CREATE_SASLDB_PATH
            value: /opt/interconnect/etc/qdrouterd.sasldb
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: registry.redhat.io/amq7/amq-interconnect:1.7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8672
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: inter-router-zone2
          ports:
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 5671
            name: amqps
            protocol: TCP
          - containerPort: 8672
            name: http
            protocol: TCP
          - containerPort: 55672
            name: inter
            protocol: TCP
          - containerPort: 45672
            name: edge
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8672
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/qpid-dispatch-certs/inter-router/
            name: inter-router-certs
            readOnly: true
          - mountPath: /etc/qpid-dispatch-certs/external/
            name: external-certs
            readOnly: true
          - mountPath: /etc/qpid-dispatch/
            name: config-volume
          - mountPath: /etc/sasl2/
            name: sasl-config
          - mountPath: /etc/qpid-dispatch-users
            name: users
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: router
        serviceAccountName: router
        terminationGracePeriodSeconds: 60
        volumes:
        - name: inter-router-certs
          secret:
            defaultMode: 420
            secretName: router-inter-router-certs
        - name: external-certs
          secret:
            defaultMode: 420
            secretName: router-external-certs
        - configMap:
            defaultMode: 420
            name: router-sasl-config
          name: sasl-config
        - name: users
          secret:
            defaultMode: 420
            secretName: router-users
        - configMap:
            defaultMode: 420
            name: inter-router-zone2
          name: config-volume
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The router's AMQP port.
    labels:
      application: inter-router-zone2
    name: inter-router-zone2
  spec:
    ports:
    - name: amqp
      port: 5672
      protocol: TCP
      targetPort: 5672
    - name: amqps
      port: 5671
      protocol: TCP
      targetPort: 5671
    - name: http
      port: 8672
      protocol: TCP
      targetPort: 8672
    - name: inter-router
      port: 55672
      protocol: TCP
      targetPort: 55672
    - name: edge
      port: 45672
      protocol: TCP
      targetPort: 45672
    selector:
      deploymentConfig: inter-router-zone2
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      application: inter-router-zone2
    name: inter-router-zone2-console
  spec:
    port:
      targetPort: http
    tls:
      termination: edge
    to:
      kind: Service
      name: inter-router-zone2
